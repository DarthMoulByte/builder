#!/bin/sh

# contains functions used to access mysql db

# shellcheck disable=SC2039

mysql_command='mysql buildmaster -e'

# add_package_source $pkgbase $pkgver $pkgrel $git_revision $mod_git_revision $upstream_package_repository

# shellcheck disable=SC2016,SC2086
add_package_source() {
  local names='pkgbase pkgver pkgrel git_revision mod_git_revision upstream_package_repository'
  local values;
  for _ in ${names}; do
    values="${values}$(
      printf '%s' "$1" | \
        base64 -w0
    ) "
    shift
  done
  values="${values% }"

  ${mysql_command} "$(
    printf 'INSERT IGNORE INTO package_sources'
    {
      printf ' ('
      printf '`%s`, ' ${names}
      printf ') SELECT'
      printf ' from_base64("%s"), ' ${values% *}
      printf ' `upstream_repositories`.`id`'
      printf ' FROM `upstream_repositories`'
      printf ' WHERE `upstream_repositories`.`name` = from_base64("%s");' \
        "${values##* }"
    } | \
      sed 's|, )|)|g'
  )"
}

#add_binary_package $pkgbase $git_revision $mod_git_revision $upstream_package_repository $pkgname $sub_pkgrel $architecture $repository

# shellcheck disable=SC2016,SC2086,SC2154
add_binary_package() {
  local names='pkgbase git_revision mod_git_revision upstream_package_repository pkgname sub_pkgrel architecture repository'
  local name
  for name in ${names}; do
    eval 'local '"${name}"
    eval "${name}"'=$(
      printf "%s" "$1" |
        base64 -w0
    )'
    shift
  done

  ${mysql_command} "$(
    printf 'INSERT IGNORE INTO binary_packages'
    {
      printf ' ('
      printf '`%s`, ' 'sub_pkgrel' 'pkgname' 'package_source' 'repository' 'architecture'
      printf ') SELECT'
      printf ' from_base64("%s"), ' "${sub_pkgrel}" "${pkgname}"
      printf ' `%s`.`id`,' 'package_sources' 'repositories' 'architectures'
      printf ' FROM'
      printf ' `%s` JOIN' 'package_sources' 'repositories' 'architectures'
      printf ' `upstream_repositories` ON `package_sources`.`upstream_package_repository` = `upstream_repositories`.`id`'
      printf ' WHERE'
      printf ' `%s`.`name` = from_base64("%s") AND' \
        'repositories' "${repository}" \
        'architectures' "${architecture}"
      printf ' `package_sources`.`%s` = from_base64("%s") AND' \
        'pkgbase' "${pkgbase}" \
        'git_revision' "${git_revision}" \
        'mod_git_revision' "${mod_git_revision}"
      printf ' `upstream_repositories`.`name` = from_base64("%s")' \
        "${upstream_package_repository}"
    } | \
      sed '
        s|, )|)|g
        s|, FROM| FROM|g
      '
  )"
}

# show_binary_package $pkgname $pkgver $pkgrel $sub_pkgrel

# shellcheck disable=SC2016,SC2086,SC2154
show_binary_package() {
  local names='pkgname pkgver pkgrel sub_pkgrel'
  local name
  for name in ${names}; do
    eval 'local '"${name}"
    eval "${name}"'=$(
      printf "%s" "$1" |
        base64 -w0
    )'
    shift
  done

  local joint
  ${mysql_command} "$(
    printf 'SELECT * FROM `binary_packages`'
    for joint in 'architectures:binary_packages:architecture' 'package_sources:binary_packages:package_source'; do
      printf ' JOIN `%s` ON `%s`.`id` =' \
        "${joint%%:*}" "${joint%%:*}"
      joint="${joint#*:}"
      printf ' `%s`.`%s`' \
        "${joint%:*}" "${joint#*:}"
    done
    printf ' WHERE'
    {
      printf ' `%s`.`%s` = from_base64("%s") AND' \
        'binary_packages' 'pkgname' "${pkgname}" \
        'binary_packages' 'sub_pkgrel' "${sub_pkgrel}" \
        'package_sources' 'pkgver' "${pkgver}" \
        'package_sources' 'pkgrel' "${pkgrel}"
      printf ';'
    } | \
      sed '
        s|AND;|;|g
      '
  )"
}
