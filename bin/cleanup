#!/bin/sh

# clean up unnecessary data

# shellcheck source=conf/default.conf
. "${0%/*}/../conf/default.conf"

# we only clean if run interactive or if no one is logged in
if ! tty -s && \
  [ -n "$(users)" ]; then
  >&2 echo 'Skipping clean up.'
  exit
fi

if [ -s "${work_dir}/build-master-sanity" ]; then
  >&2 echo 'Build master is not sane.'
  exit
fi

# remove blocked/broken/locked markes of packages not on the buildlist anymore

{
  find "${work_dir}/package-states" -maxdepth 1 \( -name '*.broken' -o -name '*.locked' -o -name '*.blocked' \) -printf '%f\n' | \
    sed '
      s|^\(.*\)\.\([^.]\+\)\.\([^.]\+\)\.\([^.]\+\)\.\([^.]\+\)$|state \0 \1 \2 \3 \4 \5|
    '
  awk '{
    print "order " $1 "." $2 "." $3 "." $4 " " $1 " " $2 " " $3 " " $4 " broken"
    print "order " $1 "." $2 "." $3 "." $4 " " $1 " " $2 " " $3 " " $4 " blocked"
    print "order " $1 "." $2 "." $3 "." $4 " " $1 " " $2 " " $3 " " $4 " locked"
  }' "${work_dir}/build-list"
} | \
  sort -k3 | \
  uniq -uf2 | \
  grep '^state ' | \
  awk '{print $2}' | \
  sed "s|^|${work_dir}/package-states/|" | \
  xargs -rn1 rm

# remove logs where package is not broken/locked anymore

# TODO: be a little more secure on deleting stuff (deleting "a.*" also deletes "a.b.*",
# so removing logs of "a" will also remove logs of "a.b".

{
  find "${build_log_directory}/error" -maxdepth 1 -type f -printf '%f\n' | \
    sed 's|\.[^.]\+\.build-log\.gz$||' | \
    sort -u
  find "${work_dir}/package-states" -maxdepth 1 \( \
    -name '*.broken' -o \
    -name '*.done' -o \
    -name '*.locked' -o \
    -name '*.testing' \
  \) -printf '%f\n' | \
    sed '
      s|\.[^.]\+$||
      p
    '
} | \
  sort | \
  uniq -u | \
  cut -d' ' -f1 | \
  while read -r s; do
    rm -f "${build_log_directory}/error/${s}."*
  done

# only keep 10 newest logs per failed package

find "${build_log_directory}/error" -maxdepth 1 -type f -printf '%f\n' | \
  sed 's|^\(.*\)\(\.\([^.]\+\)\.build-log\.gz\)$|\1\2 \3 \1|' | \
  sort -k3,3 -k2r,2 | \
  uniq -f2 --group=prepend | \
  cut -d' ' -f1 | \
  {
    count=0
    while read -r a; do
      if [ -z "${a}" ]; then
        count=0
        continue
      fi
      if [ ${count} -ge 10 ]; then
        rm "${build_log_directory}/error/${a}"
      fi
      count=$((count+1))
    done
  }

# only keep namcap logs of last 2 weeks for succeeded packages
find "${build_log_directory}/success" -maxdepth 1 -type f -mtime +14 \
  -not -exec zgrep -q '^+.*ELF file .* has text relocations' '{}' \; \
  -delete

# remove old package meta data
delete_old_metadata
